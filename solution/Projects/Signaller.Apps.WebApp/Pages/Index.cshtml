@page
@model IndexModel
@{
    var apiUrl = (string) ViewData["ApiUrl"];
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.7/signalr.js" integrity="sha512-VZ+fgIWmNx03fl/L+pZEdtGkBMLy+XPneNvXEQTStmaH+BPmy7jwW80+Rh5MfrowpRywUDoYJwwHX7K9YrG3fw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<div class="signalr-demo">
    <form id="message-form">
        <input type="text" id="message-box"/>
    </form>
    <hr />
    <ul id="messages"></ul>
</div>
<script>
    const messageForm = document.getElementById('message-form');
    const messageBox = document.getElementById('message-box');
    const messages = document.getElementById('messages');
    
    const options = {
        accessTokenFactory: getToken
    };
    
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("@apiUrl")
        .configureLogging(signalR.LogLevel.Information)
        .build();
    
    connection.on('messageReceived', (sender,  text) => {
        console.log(`${sender}: ${text}`);

        const message = document.createElement('li');
        
        message.appendChild(
            document.createTextNode(`${sender}: ${text}`)
        );

        messages.appendChild(message);
    });
    
    connection
        .start()
        .then(() => console.log('connected!'))
        .catch(console.error);
    
    messageForm.addEventListener('submit', (e) => {
        e.preventDefault();
        
        const messageText = messageBox.value;
        
        connection.invoke('SendMessage', messageText);
        
        messageBox.value = '';
    });
    
    function getToken() {
        const xhr = new XMLHttpRequest();
        
        return new Promise((resolve, reject) => {
            xhr.onreadystatechange = function () {
                if (this.readyState !== 4) return;
                
                if (this.status === 200) {
                    resolve(this.responseText);
                } else {
                    reject(this.statusText);
                }
            };
            xhr.open('GET', '/api/token');
            xhr.send();
        });
    }
</script>